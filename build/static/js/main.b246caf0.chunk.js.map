{"version":3,"sources":["Components/SignIn.js","Components/SignUp.js","Components/Table.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","SignIn","classes","React","useState","firstLoad","setLoad","username","setName","password","setPassword","toInput","a","fetch","method","headers","body","JSON","stringify","response","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","value","label","name","autoComplete","onChange","event","target","type","Button","color","onClick","variables","doLogin","justify","to","SignUp","history","useHistory","setFirstName","surname","setLastName","email","setEmail","errors","setErrors","json","ok","push","error","helperText","doRegister","table","minWidth","justifyContent","height","link","textDecoration","alignSelf","SimpleTable","data","upDateData","isLoading","sampleFunc","length","CircularProgress","TableContainer","style","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","department","gender","dob","App","exact","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b246caf0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [username, setName] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleUserNameChange = (event) => setName(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"Nothing saved in the session\");\r\n\r\n  async function doLogin(toInput) {\r\n    // const response = await fetch(\"http://localhost:8080/api/sign-in\", {\r\n    //   method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    //   // mode: \"cors\", // no-cors, *cors, same-origin\r\n    //   // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    //   // credentials: \"same-origin\", // include, *same-origin, omit\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //     // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    //   },\r\n    //   // redirect: \"follow\", // manual, *follow, error\r\n    //   // referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n    //   body: JSON.stringify(toInput), // body data type must match \"Content-Type\" header\r\n    // });\r\n    const response = await fetch(\"http://localhost:8080/api/sign-in\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(toInput), // body data type must match \"Content-Type\" header\r\n    });\r\n    console.log(response);\r\n    // let body = await response.json();\r\n    // console.log(body.id);\r\n    // setMessage(body.id ? \"Login successful\" : \"Login Failed\");\r\n  }\r\n\r\n  const handleSubmit = (variables) => {\r\n    const toInput = { username, password };\r\n    doLogin(toInput);\r\n    setName(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                value={username}\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={handleUserNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                type=\"password\"\r\n                value={password}\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Link to=\"/signup\">New User? Click here to register?</Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n  let history = useHistory();\r\n\r\n  const [name, setFirstName] = React.useState(\"\");\r\n  const [surname, setLastName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n  const handleEmailChange = (event) => setEmail(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  const [errors, setErrors] = React.useState({});\r\n\r\n  async function doRegister(toInput) {\r\n    console.log(JSON.stringify(toInput));\r\n    let response = await fetch(\"http://localhost:8080/api/sign-up\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(toInput), // body data type must match \"Content-Type\" header\r\n    });\r\n    let body = await response.json();\r\n    if (!response.ok) {\r\n      console.log(\"Errors:\", body);\r\n      setErrors(body);\r\n    } else {\r\n      console.log(\"Success:\", body);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (variables) => {\r\n    const toInput = { name, surname, email, password };\r\n    doRegister(toInput);\r\n    // setFirstName(\"\");\r\n    // setLastName(\"\");\r\n    // setEmail(\"\");\r\n    // setPassword(\"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Link to=\"/\">Already registered? Click here to Login?</Link>\r\n          </Grid>\r\n        </Grid>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register User\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                value={name}\r\n                label=\"First Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                onChange={handleFirstNameChange}\r\n                error={errors.name ? true : false}\r\n                helperText={errors.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"surname\"\r\n                value={surname}\r\n                label=\"Last Name\"\r\n                name=\"surname\"\r\n                autoComplete=\"surname\"\r\n                onChange={handleLastNameChange}\r\n                error={errors.surname ? true : false}\r\n                helperText={errors.surname}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                value={email}\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleEmailChange}\r\n                error={errors.email ? true : false}\r\n                helperText={errors.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={password}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                onChange={handlePasswordChange}\r\n                error={errors.password ? true : false}\r\n                helperText={errors.password}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        minWidth: 600\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: `10px`,\r\n        height: \"100%\",\r\n        width: \"99%\",\r\n        marginTop: theme.spacing(7)\r\n    },\r\n    link: {\r\n        color: \"rgba(0,0,0,0.65)\",\r\n        textDecoration: \"none\",\r\n        marginLeft: \"10%\",\r\n        alignSelf: \"flex-start\",\r\n        \"&:hover\": {\r\n            color: \"rgba(0,0,0,1)\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function SimpleTable() {\r\n    const classes = useStyles();\r\n\r\n    const [data, upDateData] = React.useState([]);\r\n    const [firstLoad, setLoad] = React.useState(true);\r\n    let isLoading = true;\r\n\r\n    async function sampleFunc() {\r\n        let response = await fetch(\"/api/employee\");\r\n        let body = await response.json();\r\n        upDateData(body);\r\n    }\r\n\r\n    if (firstLoad) {\r\n        sampleFunc();\r\n        setLoad(false);\r\n    }\r\n\r\n    if (data.length > 0) isLoading = false;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <GroupIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Employee Directory\r\n            </Typography>\r\n\r\n            {isLoading ? (\r\n                <CircularProgress />\r\n            ) : (\r\n                <TableContainer\r\n                    style={{ width: \"80%\", margin: \"0 10px\" }}\r\n                    component={Paper}\r\n                >\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Name</TableCell>\r\n                                <TableCell align=\"center\">Department</TableCell>\r\n                                <TableCell align=\"center\">Gender</TableCell>\r\n                                <TableCell align=\"center\">Dob</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data?.map(row => (\r\n                                <TableRow key={row.name}>\r\n                                    <TableCell align=\"center\">{row.name}</TableCell>\r\n                                    <TableCell align=\"center\">{row.department}</TableCell>\r\n                                    <TableCell align=\"center\">{row.gender}</TableCell>\r\n                                    <TableCell align=\"center\">{row.dob}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            )}\r\n            <Link className={classes.link} to=\"/\">\r\n                {\" \"}\r\n                <Typography align=\"left\">\r\n                    &#x2190; Head back to save data\r\n                </Typography>{\" \"}\r\n            </Link>\r\n        </div>\r\n    );\r\n}","import React, { Component } from \"react\";\nimport SignIn from \"./Components/SignIn\";\nimport SignUp from \"./Components/SignUp\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Table from \"./Components/Table\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Route exact path=\"/\" component={SignIn} />\n                <Route exact path=\"/signup\" component={SignUp} />\n                <Route exact path=\"/view\" component={Table} />\n            </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}